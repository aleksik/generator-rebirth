// ========================================
// BREAKPOINT MIXIN
// ========================================
//
// * Default usage: @include breakpoint(medium) {}
// * Custom usage: @include breakpoint(false, 200) {}

@mixin breakpoint($media, $min-width: false, $max-width: false, $min-height: false, $max-height: false) {
  
  // e.g. old feature phones
  @if $media == "small-down" {
    @if $remove-mq == false {
      @media only screen and (max-width: $breakpoint-small - 1) { @content; }
    }
  }

  // e.g. iPhone landscape and down
  @elseif $media == "small-landscape-down" {
    @if $remove-mq == false {
      @media only screen and (max-width: $breakpoint-small-landscape - 1) { @content; }
    }
  }

  // e.g. iPhone landscape and up
  @elseif $media == "small-landscape-up" {
    @if $remove-mq {
      @content;
    } @else {
      @media only screen and (min-width: $breakpoint-small-landscape) { @content; }
    }
  }

  // e.g. iPad portrait, Nexus portrait and down to mobile
  @elseif $media == "medium-down" {
    @if $remove-mq == false {
      @media only screen and (max-width: $breakpoint-medium - 1) { @content; }
    }
  }

  // e.g. iPad portrait and up
  @elseif $media == "medium-up" {
    @if $remove-mq {
      @content;
    } @else {
      @media only screen and (min-width: $breakpoint-medium) { @content; }
    }
  }

  // e.g. iPad portrait only
  @elseif $media == "medium-only" {
    @if $remove-mq == false {
      @media only screen and (min-width: $breakpoint-medium) and (max-width: $breakpoint-large - 1) { @content; }
    }
  }

  // e.g. iPad landscape and old desktop pc
  @else if $media == "large-up" {
    @if $remove-mq {
      @content;
    } @else {
      @media only screen and (min-width: $breakpoint-large) { @content; }
    }
  }

  // e.g. Desktop pc
  @else if $media == "xlarge-up" {
    @if $remove-mq {
      @content;
    } @else {
      @media only screen and (min-width: $breakpoint-xlarge) { @content; }
    }
  }

  // Custom breakpoints
  @elseif $min-width and $max-width  {
    @if $remove-mq == false {
      @media only screen and (min-width: $min-width) and (max-width: $max-width) { @content; }
    }
  }
  @elseif $min-width and $min-height {
    @if $remove-mq == false {
      @media only screen and (min-width: $min-width) and (min-height: $min-height) { @content; }
    }
  }
  @elseif $min-width and $max-height {
    @if $remove-mq == false {
      @media only screen and (min-width: $min-width) and (max-height: $max-height) { @content; }
    }
  }
  @elseif $max-width and $min-height {
    @if $remove-mq == false {
      @media only screen and (max-width: $max-width) and (min-height: $min-height) { @content; }
    }
  }
  @elseif $max-width and $max-height {
    @if $remove-mq == false {
      @media only screen and (max-width: $max-width) and (max-height: $max-height) { @content; }
    }
  }

  @elseif $min-width {
    @if $remove-mq {
      @content;
    } @else {
      @media only screen and (min-width: $min-width) { @content; }
    }
  }
  @elseif $max-width {
    @if $remove-mq == false {
      @media only screen and (max-width: $max-width) { @content; }
    }
  }
  @elseif $min-height {
    @if $remove-mq == false {
      @media only screen and (min-height: $min-height) { @content; }
    }
  }
  @elseif $max-height {
    @if $remove-mq == false {
      @media only screen and (max-height: $max-height) { @content; }
    }
  }
}

// High-resolution display
@mixin breakpoint-hdpi($ratio:1.5) {
  @if $remove-mq == false {
    @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
    only screen and (min--moz-device-pixel-ratio: $ratio),
    only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
    only screen and (min-resolution: #{round($ratio*96)}dpi),
    only screen and (min-resolution: #{$ratio}dppx) {
      @content;
    }
  }
}