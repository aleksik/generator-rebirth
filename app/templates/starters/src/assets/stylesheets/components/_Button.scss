/* ========================================
 * Button
 * ========================================
 *
 * @reusable true
 */

.Button {
  @extend %textTruncate;
  @include fontSize($baseFontSize, rem($Button-height));
  background-color: transparent;
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-weight: $baseFontWeightStrong;
  margin-bottom: rem(($baseSpace - ($Button-height)) + ($baseSpace * 2));
  margin-right: rem($baseSpace / 2);
  outline: 0;
  padding: 0 rem($baseSpace);
  position: relative;
  text-align: center;
  transition: $transitionDuration;
  user-select: none;
  vertical-align: top;
  white-space: nowrap;

  &:hover,
  &:focus {
    text-decoration: none;
  }
}


/* ======
 * Button - Style
 * ====== */

.Button {
  &.-round {
    @extend %round;
  }

  &.-pill {
    @extend %pill;
  }

  &.-border {
    border: $Button-borderWidth solid transparent;
    line-height: rem(($Button-height) - ($Button-borderWidth * 2));
  }
}


/* ======
 * Button - Size
 * ====== */

.Button {
  $h: $Button-height;
  $l: $Button-l;
  $s: $Button-s;

  &.-l {
    @include fontSize($baseFontSize-l, rem(($h * $l)));
    margin-bottom: rem(($baseSpace - ($h * $l)) + ($baseSpace * 2 * $l));
    padding: 0 rem($baseSpace * $l);

    &.-border {
      line-height: rem(($h * $l) - ($Button-borderWidth * 2));
    }
  }

  &.-s {
    @include fontSize($baseFontSize-s, rem(($h * $s)));
    margin-bottom: rem(($baseSpace - ($h * $s)) + ($baseSpace * 2));
    padding: 0 rem($baseSpace * $s);

    &.-border {
      line-height: rem(($h * $s) - ($Button-borderWidth * 2));
    }
  }

  &.-full {
    display: block;
    width: 100%;
  }
}


/* ======
 * Button - States
 * ====== */

.Button {
  &.is-disabled,
  &[disabled],
  fieldset[disabled] & {
    @extend %disabled;
  }

  &.is-open {
    overflow: visible;
  }
}


/* ======
 * Button - Default
 * ====== */

.Button--default {
  background-color: #ffffff;
  color: $colorPrimary;

  &:hover,
  &:focus {
    background-color: darken(#ffffff, 5);
  }

  &.-transparent {
    background-color: transparent;
    color: $colorBorderDefault;

    &:hover,
    &:focus {
      background-color: $colorPrimary;
      border-color: $colorPrimary;
      color: #ffffff;
    }
  }

  &.-border {
    border-color: $colorBorderDefault;
  }
}


/* ======
 * Button - Primary
 * ====== */

.Button--primary {
  background-color: $colorPrimary;
  color: #ffffff;

  &:hover,
  &:focus {
    background-color: darken($colorPrimary, 5);
    color: #ffffff;
  }

  &.-transparent {
    background-color: transparent;
    color: $colorPrimary;

    &:hover,
    &:focus {
      background-color: $colorPrimary;
      border-color: $colorPrimary;
      color: #ffffff;
    }
  }

  &.-border {
    border-color: darken($colorPrimary, 5);
  }
}
