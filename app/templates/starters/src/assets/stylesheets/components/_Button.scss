/* ========================================
 * Button
 * ======================================== */

.Button {
  background-color: transparent;
  border: $Button-borderWidth solid transparent;
  cursor: pointer;
  display: inline-block;
  font-size: rem($Button-fontSize);
  font-weight: $Button-fontWeight;
  line-height: rem($Button-lineHeight - ($Button-borderWidth * 2));
  margin-bottom: rem((($baseSpace * 3) - $Button-lineHeight));
  margin-right: rem($baseSpace / 2);
  outline: 0;
  padding: 0 rem($Button-padding);
  position: relative;
  text-align: center;
  transition: $transitionDuration;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  &:hover, &:focus {
    text-decoration: none;
  }
}


/* ======
 * Button - shape
 * ====== */

.Button {
  &.-round {
    border-radius: $Button-borderRadius;
  }
}


/* ======
 * Button - size
 * ====== */

.Button {
  &.-s {
    font-size: $baseFontSize-s;
    line-height: rem(($Button-lineHeight / 1.5) - ($Button-borderWidth * 2));
    padding: 0 rem($Button-padding / 2);
    margin-bottom: rem($baseSpace);
  }

  &.-l {
    line-height: rem(($Button-lineHeight * 1.35) - ($Button-borderWidth * 2));
    margin-bottom: rem($baseSpace);
    padding: 0 rem($Button-padding * 1.5);
  }

  &.-full {
    display: block;
    width: 100%;
  }
}


/* ======
 * Button - disabled state
 * ====== */

.Button {
  &.is-disabled,
  &[disabled], fieldset[disabled] & {
    @extend %disabled;
  }
}


/* ======
 * Button - primary variation
 * ====== */

.Button--primary {
  background-color: $colorPrimary;
  border-color: $colorPrimary;
  color: #ffffff;

  &:hover, &:focus {
    background-color: darken($colorPrimary, 5);
    border-color: darken($colorPrimary, 5);
    color: #ffffff;
  }

  &.-border {
    background-color: transparent;
    color: $colorText;

    &:hover, &:focus {
      background-color: transparent;
      border-color: $colorPrimary;
      color: $colorPrimary;
    }
  }
}
