/* ========================================
 * Button
 * ========================================
 *
 * @reusable true
 */

@mixin buttonSize($scale: 1, $fontSize: $baseFontSize) {
  @if $scale <= 0.5  {
    $scaleMargin: 0.5
  } @elseif $scale < 1 {
    $scaleMargin: 1
  } @else {
    $scaleMargin: $scale
  }

  @include fontSize($fontSize, (($Button-height * $scale) - ($Button-borderWidth * 2)));
  margin-bottom: rem(($baseSpace - ($Button-height * $scale)) + ($baseSpace * 2 * $scaleMargin));
  padding: 0 rem($baseSpace * $scale);
}

.Button {
  @extend %textTruncate;
  @include buttonSize();
  background-color: transparent;
  border: $Button-borderWidth solid transparent;
  cursor: pointer;
  display: inline-block;
  font-weight: $baseFontWeightStrong;
  margin-right: rem($baseSpace / 2);
  outline: 0;
  position: relative;
  text-align: center;
  transition: $transitionDuration;
  user-select: none;
  vertical-align: top;
  white-space: nowrap;

  &:hover, &:focus {
    text-decoration: none;
  }
}


/* ======
 * Button - shape
 * ====== */

.Button {
  &.-round {
    border-radius: $Button-roundBorderRadius;
  }

  &.-pill {
    border-radius: $Button-pillBorderRadius;
  }
}


/* ======
 * Button - size
 * ====== */

.Button {
  &.-s {
    @include buttonSize($Button-s, $baseFontSize-s);
  }

  &.-l {
    @include buttonSize($Button-l, $baseFontSize-l);
  }

  &.-full {
    display: block;
    width: 100%;
  }
}


/* ======
 * Button - disabled state
 * ====== */

.Button {
  &.is-disabled,
  &[disabled], fieldset[disabled] & {
    @extend %disabled;
  }
}


/* ======
 * Button - primary modifier
 * ====== */

.Button--primary {
  background-color: $colorPrimary;
  border-color: $colorPrimary;
  color: #ffffff;

  &:hover, &:focus {
    background-color: darken($colorPrimary, 5);
    border-color: darken($colorPrimary, 5);
    color: #ffffff;
  }

  &.-border {
    background-color: transparent;
    color: $colorText;

    &:hover, &:focus {
      background-color: transparent;
      border-color: $colorPrimary;
      color: $colorPrimary;
    }
  }
}
