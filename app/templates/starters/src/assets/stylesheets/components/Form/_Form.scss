/* ========================================
 * Form
 * ========================================
 *
 * @reusable true
 */

.Form {
  position: relative;
  width: 100%;
}

  %Form-item-appearance {
    background-color: #ffffff;
    border: $Form-borderWidth solid transparent;
    color: $colorText;
    font-weight: $Form-fontWeight;
  }

  %Form-item-layout {
    font-size: rem($Form-fontSize);
    height: rem($Form-height);
    line-height: rem($Form-height - ($Form-borderWidth * 2));
    padding: 0 rem($Form-padding);
  }

  .Form-item {
    @extend %Form-item-appearance;
    @extend %Form-item-layout;
    border-radius: 0;
    display: block;
    flex: 1;
    margin-bottom: rem($baseSpace);
    outline: 0;
    padding: 0 rem($Form-padding);
    position: relative;
    text-align: left;
    width: 100%;
    -moz-appearance: none !important;
    -webkit-appearance: none !important;

    .touchevents & {
      font-size: 16px;
    }

    &[type="search"] {
      box-sizing: border-box;
    }
  }

  /**
   * @extends `.Button{}` in _Button.scss
   */
  .Form-button.Button {
    @extend %Form-item-layout;
    margin: 0;

    &[disabled], fieldset[disabled] & {
      @extend %disabled;
    }
  }

  textarea {
    &.Form-item {
      line-height: $baseLineHeight;
      min-height: rem($baseSpace * 6);
      padding-top: rem($baseSpace / 2);
      resize: vertical;
    }
  }

  .Form-item--select {
    padding: 0;

    select {
      background-color: transparent;
      border: 1px solid transparent;
      cursor: pointer;
      left: 0;
      outline: 0;
      padding: 0 rem($Form-padding);
      position: relative;
      width: 100%;
      z-index: 2;
      -webkit-appearance: none;
      -moz-appearance: none;

      &::-ms-expand {
        display: none;
      }
    }
  }


/* ======
 * Form item - Various modifiers
 * ====== */

.Form-item {
  &.-round {
    @extend %round;
  }
}


/* ======
 * Form - Default
 * ====== */

.Form--default {
  %Form--default-Form-item, .Form-item {
    background-color: #ffffff;
    color: $colorTextLight;

    &.-border {
      border-color: $colorBorderDefault;
    }
  }

  .Form-item {
    @include colorPlaceholder($colorTextLight);
    color: $colorTextLight;

    &:hover,
    &:focus {
      @include colorPlaceholder($colorText);
      color: $colorText;
    }

    &.-border {
      &:hover,
      &:focus {
        border-color: $colorBorderDefault;
      }
    }
  }
}
