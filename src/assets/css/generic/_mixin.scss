/* ========================================
 * Mixins
 * ======================================== */

/**
 * Base spacing mixin
 */
@function base-space($times: 1, $type: "px") {
  @if $type == "em" {
    @return ($base-space / $base-font-size) * $times#{em};
  } @else {
    @return $base-space * $times;
  }
}

/**
 * Strip units
 */
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

/**
 * Convert pixels to em's
 */
@function em($pixels, $context: $base-font-size) {
  @return #{strip-unit($pixels) / strip-unit($context)}em;
}

/**
 * Font sizing with vertical rhythm
 */
@mixin rem($font-size, $line-height: true){
  font-size: $font-size +px;
  font-size: ($font-size / $base-font-size) *1rem;

  @if $line-height {
    line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
  }
}

/**
 * Clearfix
 */
@mixin clearfix() {
  @if $lt-ie9 {
    *zoom: 1;
  }
  &:before, &:after {
    content: "";
    display: table
  }
  &:after {
    clear: both
  }
}

/**
 * Force overly long spans of text to truncate
 * e.g.: @include truncate(80%);
 * Where $truncation-boundary is a united measurement.
 */
@mixin text-truncate($truncation-boundary: 100%){
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**
 * Image replacement
 */
@mixin text-hide() {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

/**
 * Triangle shortcut
 */
@mixin triangle($width: 20px, $height: 20px, $direction: up, $color: red) {
  width: 0;
  height: 0;

  @if $direction == right {
    border-top: $height solid transparent;
    border-bottom: $height solid transparent;
    border-left: $width solid $color;
  }
  @if $direction == left {
    border-top: $height solid transparent;
    border-bottom: $height solid transparent;
    border-right: $width solid $color;
  }
  @if $direction == up {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-bottom: $height solid $color;
  }
  @if $direction == down {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-top: $height solid $color;
  }
}
