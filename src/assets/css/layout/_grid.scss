/* ========================================
 * Grid
 * ======================================== */

.grid {
  @extend .cf;
  margin-left: -(base-space());
  list-style: none;
  margin-bottom: 0;

  > .grid {
    margin-left: 0;
  }
}

/**
 * Sizing
 */
.grid--full {
  margin-left: 0;

  > .grid__item {
    padding-left: 0;
  }
}

.grid--l {
  margin-left: -(base-space(2));

  > .grid__item {
    padding-left: base-space(2);
  }
}

/**
 * Equal height columns
 */
@mixin grid-equal($gutter: 1) {
  display: table;
  height: 100%;

  > .grid__item {
    display: table-cell;
    float: none;
    vertical-align: top;
    height: 100%;
  }
}

.s-grid--equal {
  @include breakpoint("small-up") {
    @include grid-equal();
  }
}

.m-grid--equal {
  @include breakpoint("medium-up") {
    @include grid-equal();
  }
}

.l-grid--equal {
  @include breakpoint("large-up") {
    @include grid-equal();
  }
}

/**
 * Equal height columns with rulers
 */
@mixin grid-ruler($gutter: 1) {
  display: table;
  margin-left: -(base-space($gutter));
  height: 100%;
  table-layout: fixed;
  width: 100%;
  width: calc(100% + #{(base-space($gutter * 2))});

  > .grid__item {
    padding: 0 base-space($gutter);
    display: table-cell;
    vertical-align: top;
    height: 100%;
    float: none;
    border-left: 1px solid;
    border-color: $color-border-primary;

    &:first-child {
      border-left: none;
    }
  }
}

.s-grid--ruler {
  @include breakpoint("small-up") {
    @include grid-ruler();
  }
}

.m-grid--ruler {
  @include breakpoint("medium-up") {
    @include grid-ruler();
  }
}

.l-grid--ruler {
  @include breakpoint("large-up") {
    @include grid-ruler();
  }
}

  /**
   * Column
   */
  .grid__item {
    position: relative;
    float: left;
    width: 100%;
    padding-left: base-space();
    min-height: 1px;
  }

